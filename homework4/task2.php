<?php
// class A
// {
//     public function foo()
//     {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// $a1 = new A();
// $a2 = new A();
// $a1->foo();
// $a2->foo();
// $a1->foo();
// $a2->foo();

// Что он выведет на каждом шаге? Почему?
// Выведет: 1234
// Используется статическая переменная. Присваивание выполняется только один раз, при первом вызове функции. Значение сохраняется после окончания работы функции. При последующих вызовах функции вместо присваивания переменная получает сохраненное ранее значение.
// Немного изменим п.5

class A
{
    public function foo()
    {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {}
$a1 = new A();
$b1 = new B();
$a1->foo();
$b1->foo();
$a1->foo();
$b1->foo();
    
    // Что он выведет теперь?
    // Выведет: 1234 
    // Так же используется статическая переменная. Класс B наследуется от класса A и получает сохраненное ранее значение.